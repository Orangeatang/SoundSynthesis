
//////////////////////////////////////////////////////////////////////////
/// Includes
//////////////////////////////////////////////////////////////////////////

#include "stdafx.h"
#include "IAudioEffect.h"
#include "SoundSystem.h"


//////////////////////////////////////////////////////////////////////////
/// CAudioEffect
//////////////////////////////////////////////////////////////////////////

IAudioEffect::IAudioEffect( CSoundSystem* aSoundSystem, UINT32 someFlags, UINT32 aChannelCount, UINT32 aSampleRate ) : IAudioVoice( aSoundSystem, someFlags ),
    myVoice( nullptr ),
    myChannelCount( aChannelCount ),
    mySampleRate( aSampleRate )
{
}

//////////////////////////////////////////////////////////////////////////

IAudioEffect::~IAudioEffect()
{
}

//////////////////////////////////////////////////////////////////////////

UINT32 IAudioEffect::GetChannelCount() const
{
    return myChannelCount;
}

//////////////////////////////////////////////////////////////////////////

void IAudioEffect::SetChannelCount( UINT32 aChannelCount )
{
    myChannelCount = aChannelCount;
}

//////////////////////////////////////////////////////////////////////////

UINT32 IAudioEffect::GetSampleRate() const
{
    return mySampleRate;
}

//////////////////////////////////////////////////////////////////////////

void IAudioEffect::SetSampleRate( UINT32 aSampleRate )
{
    mySampleRate = aSampleRate;
}

//////////////////////////////////////////////////////////////////////////

bool IAudioEffect::CreateVoice()
{
    IXAudio2* xaudio2 = mySoundSystem->GetInterface();
    assert( xaudio2 != nullptr );

    HRESULT result = xaudio2->CreateSubmixVoice( &myVoice, myChannelCount, mySampleRate, myVoiceFlags );
    assert( result == S_OK );

    return (result == S_OK);
}

//////////////////////////////////////////////////////////////////////////
#pragma once

//////////////////////////////////////////////////////////////////////////
/// Forward Declarations
//////////////////////////////////////////////////////////////////////////

class CAudioSource;
class CAudioEffect;


//////////////////////////////////////////////////////////////////////////
/// CSoundSystem
//////////////////////////////////////////////////////////////////////////

/// Sound interface based on XAudio2
class CSoundSystem
{
public :

    //////////////////////////////////////////////////////////////////////////

    CSoundSystem();
    ~CSoundSystem();

    //////////////////////////////////////////////////////////////////////////

    bool        Initialise();

    //////////////////////////////////////////////////////////////////////////

    IXAudio2*   GetInterface() const;


private :

    //////////////////////////////////////////////////////////////////////////

    typedef std::vector<CAudioSource*> AudioSources;
    typedef std::vector<CAudioEffect*> AudioEffects;
    
    //////////////////////////////////////////////////////////////////////////

    IXAudio2*               myAudioInterface;
    IXAudio2MasteringVoice* myMasteringVoice;

    AudioSources            myAudioSources;
    AudioEffects            myAudioEffects;

    bool                    myInitialised;
};

//////////////////////////////////////////////////////////////////////////
